    string $cone[] = `polyCone -r 1 -h 2 -sx 20 -sy 1 -sz 0 -ax 0 1 0 -rcp 0 -cuv 3 -ch 1`;
    select $cone;
    move 0 1 0;
    rename $cone[0] "myConeJeff";
    select myConeJeff;
    duplicate;
    rotate 180 0 0;


// get everything selected
    string $sel[] = `ls -sl`;
    //create our loop
    for ($each in $sel)
    {
        //do something - use $each to identify objects
        select $each;
        duplicate -rr;
        rotate -r 0 18 0;
        move -r 0 1 0;
    }



// get everything selected
    string $sel[] = `ls -sl`;
    
    //array
    string $main = $sel[0];
    string $copy1 = $sel[1];
    string $copy2 = $sel[2];
    string $copy3 = $sel[3];
    
    //make objects move
    connectAttr ($main + ".rotateX") ($copy1 + ".rotateX");
    connectAttr ($main + ".rotateY") ($copy1 + ".rotateY");
    connectAttr ($main + ".rotateZ") ($copy1 + ".rotateZ");
    
    connectAttr ($main + ".rotateX") ($copy2 + ".rotateX");
    connectAttr ($main + ".rotateY") ($copy2 + ".rotateY");
    connectAttr ($main + ".rotateZ") ($copy2 + ".rotateZ");
    
    connectAttr ($main + ".rotateX") ($copy3 + ".rotateX");
    connectAttr ($main + ".rotateY") ($copy3 + ".rotateY");
    connectAttr ($main + ".rotateZ") ($copy3 + ".rotateZ");
    
    connectAttr ($main + ".translateX") ($copy1 + ".translateX");
    connectAttr ($main + ".translateX") ($copy2 + ".translateX");
    connectAttr ($main + ".translateX") ($copy3 + ".translateX");




int $nu = rand(1, 101);
int $ns = rand(1, 101);

int $total = $nu + $ns;
print("Total: " + $total + "\n");

if ($total <= 50)
{
    print("Below 50\n");
}

else if ($total >= 50 && $total <= 75)
{
    print("Above 50\n");
}

else if ($total <= 100 && $total > 75)
{
    print("Below 100\n");
}

else if ($total >= 100 && $total <= 125)
{
    print("Above 100\n");
}

else if ($total <= 150 && $total > 125)
{
    print("Below 150\n");
}

else if ($total >= 150 && $total <= 175)
{
    print("Above 150\n");
}

else if ($total <= 200 && $total > 175)
{
    print("Below 200\n");
}

else if ($total > 200)
{
    print("Above 200\n");
}




// Basic UI Example: My UI

//Delete any existing window with this name
//if (`window -exists myUI`) 
//{
//    deleteUI -window myUI;
//}

// Define a procedure for "createCube"
global proc createCube() 
{
    // createCube
    global string $makeCube[]; // Access the global variable
    $makeCube = `polyCube`;
}


// Basic UI Example: My UI

//Delete any existing window with this name
//if (`window -exists myUI`) 
//{
//    deleteUI -window myUI;
//}

// Define a procedure for "createCube"
global proc createCube() 
{
    // createCube
    global string $makeCube[]; // Access the global variable
    $makeCube = `polyCube`;
}


// Define a procedure for "rotateCube"
global proc rotate() 
{
    string $sel[] = `ls -sl`;
    for ($each in $sel)
    {
        rotate -r 0 20 0;
    }
}

global proc deleteIt()
{
    doDelete;
}

global proc deleteUI()
{
    if (`window -exists myUI`) 
    {
        deleteUI -window myUI;
    }

}

// Build the window
window -title "My UI" -widthHeight 200 100 myUI;
columnLayout -adjustableColumn true -rowSpacing 10;
    button -label "Create Cube" -backgroundColor 0.6 1.0 0.2 -command "createCube()";
    button -label "Delete" -backgroundColor 0.1 0.1 0.1 -command "deleteIt()";
    button -label "Rotate" -backgroundColor 1.0 1.0 0.0 -command "rotate()";
    button -label "Close" -backgroundColor 0.8 0.2 0.2 -command "deleteUI()";
setParent ..;

// Show the window
showWindow myUI;
